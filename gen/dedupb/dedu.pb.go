// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dedu.proto

package dedupb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ChunkMetadata struct {
	UploadTimestamp      string   `protobuf:"bytes,1,opt,name=upload_timestamp,json=uploadTimestamp,proto3" json:"upload_timestamp,omitempty"`
	SuggestedFilename    string   `protobuf:"bytes,2,opt,name=suggested_filename,json=suggestedFilename,proto3" json:"suggested_filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChunkMetadata) Reset()         { *m = ChunkMetadata{} }
func (m *ChunkMetadata) String() string { return proto.CompactTextString(m) }
func (*ChunkMetadata) ProtoMessage()    {}
func (*ChunkMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_a41550a7431a5bcb, []int{0}
}

func (m *ChunkMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChunkMetadata.Unmarshal(m, b)
}
func (m *ChunkMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChunkMetadata.Marshal(b, m, deterministic)
}
func (m *ChunkMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChunkMetadata.Merge(m, src)
}
func (m *ChunkMetadata) XXX_Size() int {
	return xxx_messageInfo_ChunkMetadata.Size(m)
}
func (m *ChunkMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_ChunkMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_ChunkMetadata proto.InternalMessageInfo

func (m *ChunkMetadata) GetUploadTimestamp() string {
	if m != nil {
		return m.UploadTimestamp
	}
	return ""
}

func (m *ChunkMetadata) GetSuggestedFilename() string {
	if m != nil {
		return m.SuggestedFilename
	}
	return ""
}

type MagicHeader struct {
	Dedu                 string   `protobuf:"bytes,1,opt,name=dedu,proto3" json:"dedu,omitempty"`
	ProtocolVersion      int32    `protobuf:"varint,2,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	PublicHeaderLength   int32    `protobuf:"varint,3,opt,name=public_header_length,json=publicHeaderLength,proto3" json:"public_header_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MagicHeader) Reset()         { *m = MagicHeader{} }
func (m *MagicHeader) String() string { return proto.CompactTextString(m) }
func (*MagicHeader) ProtoMessage()    {}
func (*MagicHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_a41550a7431a5bcb, []int{1}
}

func (m *MagicHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MagicHeader.Unmarshal(m, b)
}
func (m *MagicHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MagicHeader.Marshal(b, m, deterministic)
}
func (m *MagicHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MagicHeader.Merge(m, src)
}
func (m *MagicHeader) XXX_Size() int {
	return xxx_messageInfo_MagicHeader.Size(m)
}
func (m *MagicHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_MagicHeader.DiscardUnknown(m)
}

var xxx_messageInfo_MagicHeader proto.InternalMessageInfo

func (m *MagicHeader) GetDedu() string {
	if m != nil {
		return m.Dedu
	}
	return ""
}

func (m *MagicHeader) GetProtocolVersion() int32 {
	if m != nil {
		return m.ProtocolVersion
	}
	return 0
}

func (m *MagicHeader) GetPublicHeaderLength() int32 {
	if m != nil {
		return m.PublicHeaderLength
	}
	return 0
}

type PublicHeader struct {
	ChunkId              string   `protobuf:"bytes,1,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	PrivateHeaderLength  int32    `protobuf:"varint,2,opt,name=private_header_length,json=privateHeaderLength,proto3" json:"private_header_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicHeader) Reset()         { *m = PublicHeader{} }
func (m *PublicHeader) String() string { return proto.CompactTextString(m) }
func (*PublicHeader) ProtoMessage()    {}
func (*PublicHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_a41550a7431a5bcb, []int{2}
}

func (m *PublicHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicHeader.Unmarshal(m, b)
}
func (m *PublicHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicHeader.Marshal(b, m, deterministic)
}
func (m *PublicHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicHeader.Merge(m, src)
}
func (m *PublicHeader) XXX_Size() int {
	return xxx_messageInfo_PublicHeader.Size(m)
}
func (m *PublicHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicHeader.DiscardUnknown(m)
}

var xxx_messageInfo_PublicHeader proto.InternalMessageInfo

func (m *PublicHeader) GetChunkId() string {
	if m != nil {
		return m.ChunkId
	}
	return ""
}

func (m *PublicHeader) GetPrivateHeaderLength() int32 {
	if m != nil {
		return m.PrivateHeaderLength
	}
	return 0
}

type Hashes struct {
	Sha1                 []byte   `protobuf:"bytes,1,opt,name=sha1,proto3" json:"sha1,omitempty"`
	Md5                  []byte   `protobuf:"bytes,2,opt,name=md5,proto3" json:"md5,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hashes) Reset()         { *m = Hashes{} }
func (m *Hashes) String() string { return proto.CompactTextString(m) }
func (*Hashes) ProtoMessage()    {}
func (*Hashes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a41550a7431a5bcb, []int{3}
}

func (m *Hashes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hashes.Unmarshal(m, b)
}
func (m *Hashes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hashes.Marshal(b, m, deterministic)
}
func (m *Hashes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hashes.Merge(m, src)
}
func (m *Hashes) XXX_Size() int {
	return xxx_messageInfo_Hashes.Size(m)
}
func (m *Hashes) XXX_DiscardUnknown() {
	xxx_messageInfo_Hashes.DiscardUnknown(m)
}

var xxx_messageInfo_Hashes proto.InternalMessageInfo

func (m *Hashes) GetSha1() []byte {
	if m != nil {
		return m.Sha1
	}
	return nil
}

func (m *Hashes) GetMd5() []byte {
	if m != nil {
		return m.Md5
	}
	return nil
}

type PrivateHeader struct {
	VirtualChunk               *VirtualChunk  `protobuf:"bytes,1,opt,name=virtual_chunk,json=virtualChunk,proto3" json:"virtual_chunk,omitempty"`
	ChunkSpecificEncryptionKey []byte         `protobuf:"bytes,2,opt,name=chunk_specific_encryption_key,json=chunkSpecificEncryptionKey,proto3" json:"chunk_specific_encryption_key,omitempty"`
	OptionalMetadata           *ChunkMetadata `protobuf:"bytes,3,opt,name=optional_metadata,json=optionalMetadata,proto3" json:"optional_metadata,omitempty"`
	PlaintextHashes            *Hashes        `protobuf:"bytes,4,opt,name=plaintext_hashes,json=plaintextHashes,proto3" json:"plaintext_hashes,omitempty"`
	PlaintextLength            int32          `protobuf:"varint,5,opt,name=plaintext_length,json=plaintextLength,proto3" json:"plaintext_length,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}       `json:"-"`
	XXX_unrecognized           []byte         `json:"-"`
	XXX_sizecache              int32          `json:"-"`
}

func (m *PrivateHeader) Reset()         { *m = PrivateHeader{} }
func (m *PrivateHeader) String() string { return proto.CompactTextString(m) }
func (*PrivateHeader) ProtoMessage()    {}
func (*PrivateHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_a41550a7431a5bcb, []int{4}
}

func (m *PrivateHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivateHeader.Unmarshal(m, b)
}
func (m *PrivateHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivateHeader.Marshal(b, m, deterministic)
}
func (m *PrivateHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateHeader.Merge(m, src)
}
func (m *PrivateHeader) XXX_Size() int {
	return xxx_messageInfo_PrivateHeader.Size(m)
}
func (m *PrivateHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateHeader.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateHeader proto.InternalMessageInfo

func (m *PrivateHeader) GetVirtualChunk() *VirtualChunk {
	if m != nil {
		return m.VirtualChunk
	}
	return nil
}

func (m *PrivateHeader) GetChunkSpecificEncryptionKey() []byte {
	if m != nil {
		return m.ChunkSpecificEncryptionKey
	}
	return nil
}

func (m *PrivateHeader) GetOptionalMetadata() *ChunkMetadata {
	if m != nil {
		return m.OptionalMetadata
	}
	return nil
}

func (m *PrivateHeader) GetPlaintextHashes() *Hashes {
	if m != nil {
		return m.PlaintextHashes
	}
	return nil
}

func (m *PrivateHeader) GetPlaintextLength() int32 {
	if m != nil {
		return m.PlaintextLength
	}
	return 0
}

type Header struct {
	Magic                *MagicHeader   `protobuf:"bytes,1,opt,name=magic,proto3" json:"magic,omitempty"`
	Public               *PublicHeader  `protobuf:"bytes,2,opt,name=public,proto3" json:"public,omitempty"`
	Private              *PrivateHeader `protobuf:"bytes,3,opt,name=private,proto3" json:"private,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_a41550a7431a5bcb, []int{5}
}

func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (m *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(m, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetMagic() *MagicHeader {
	if m != nil {
		return m.Magic
	}
	return nil
}

func (m *Header) GetPublic() *PublicHeader {
	if m != nil {
		return m.Public
	}
	return nil
}

func (m *Header) GetPrivate() *PrivateHeader {
	if m != nil {
		return m.Private
	}
	return nil
}

type ChunkReference struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Length               int64    `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChunkReference) Reset()         { *m = ChunkReference{} }
func (m *ChunkReference) String() string { return proto.CompactTextString(m) }
func (*ChunkReference) ProtoMessage()    {}
func (*ChunkReference) Descriptor() ([]byte, []int) {
	return fileDescriptor_a41550a7431a5bcb, []int{6}
}

func (m *ChunkReference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChunkReference.Unmarshal(m, b)
}
func (m *ChunkReference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChunkReference.Marshal(b, m, deterministic)
}
func (m *ChunkReference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChunkReference.Merge(m, src)
}
func (m *ChunkReference) XXX_Size() int {
	return xxx_messageInfo_ChunkReference.Size(m)
}
func (m *ChunkReference) XXX_DiscardUnknown() {
	xxx_messageInfo_ChunkReference.DiscardUnknown(m)
}

var xxx_messageInfo_ChunkReference proto.InternalMessageInfo

func (m *ChunkReference) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *ChunkReference) GetLength() int64 {
	if m != nil {
		return m.Length
	}
	return 0
}

type VirtualChunk struct {
	TotalLength          int64             `protobuf:"varint,1,opt,name=total_length,json=totalLength,proto3" json:"total_length,omitempty"`
	Chunk                []*ChunkReference `protobuf:"bytes,2,rep,name=chunk,proto3" json:"chunk,omitempty"`
	PlaintextHashes      *Hashes           `protobuf:"bytes,3,opt,name=plaintext_hashes,json=plaintextHashes,proto3" json:"plaintext_hashes,omitempty"`
	ChunkId              string            `protobuf:"bytes,4,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VirtualChunk) Reset()         { *m = VirtualChunk{} }
func (m *VirtualChunk) String() string { return proto.CompactTextString(m) }
func (*VirtualChunk) ProtoMessage()    {}
func (*VirtualChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_a41550a7431a5bcb, []int{7}
}

func (m *VirtualChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualChunk.Unmarshal(m, b)
}
func (m *VirtualChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualChunk.Marshal(b, m, deterministic)
}
func (m *VirtualChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualChunk.Merge(m, src)
}
func (m *VirtualChunk) XXX_Size() int {
	return xxx_messageInfo_VirtualChunk.Size(m)
}
func (m *VirtualChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualChunk.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualChunk proto.InternalMessageInfo

func (m *VirtualChunk) GetTotalLength() int64 {
	if m != nil {
		return m.TotalLength
	}
	return 0
}

func (m *VirtualChunk) GetChunk() []*ChunkReference {
	if m != nil {
		return m.Chunk
	}
	return nil
}

func (m *VirtualChunk) GetPlaintextHashes() *Hashes {
	if m != nil {
		return m.PlaintextHashes
	}
	return nil
}

func (m *VirtualChunk) GetChunkId() string {
	if m != nil {
		return m.ChunkId
	}
	return ""
}

type LocalResourceChunk struct {
	ResourceName         string          `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	Offset               int64           `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Length               int64           `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	HashOfPlaintext      string          `protobuf:"bytes,4,opt,name=hash_of_plaintext,json=hashOfPlaintext,proto3" json:"hash_of_plaintext,omitempty"`
	HashOfCryptotext     string          `protobuf:"bytes,5,opt,name=hash_of_cryptotext,json=hashOfCryptotext,proto3" json:"hash_of_cryptotext,omitempty"`
	Chunk                *ChunkReference `protobuf:"bytes,6,opt,name=chunk,proto3" json:"chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LocalResourceChunk) Reset()         { *m = LocalResourceChunk{} }
func (m *LocalResourceChunk) String() string { return proto.CompactTextString(m) }
func (*LocalResourceChunk) ProtoMessage()    {}
func (*LocalResourceChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_a41550a7431a5bcb, []int{8}
}

func (m *LocalResourceChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocalResourceChunk.Unmarshal(m, b)
}
func (m *LocalResourceChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocalResourceChunk.Marshal(b, m, deterministic)
}
func (m *LocalResourceChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocalResourceChunk.Merge(m, src)
}
func (m *LocalResourceChunk) XXX_Size() int {
	return xxx_messageInfo_LocalResourceChunk.Size(m)
}
func (m *LocalResourceChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_LocalResourceChunk.DiscardUnknown(m)
}

var xxx_messageInfo_LocalResourceChunk proto.InternalMessageInfo

func (m *LocalResourceChunk) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func (m *LocalResourceChunk) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *LocalResourceChunk) GetLength() int64 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *LocalResourceChunk) GetHashOfPlaintext() string {
	if m != nil {
		return m.HashOfPlaintext
	}
	return ""
}

func (m *LocalResourceChunk) GetHashOfCryptotext() string {
	if m != nil {
		return m.HashOfCryptotext
	}
	return ""
}

func (m *LocalResourceChunk) GetChunk() *ChunkReference {
	if m != nil {
		return m.Chunk
	}
	return nil
}

type PcloudCredentials struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PcloudCredentials) Reset()         { *m = PcloudCredentials{} }
func (m *PcloudCredentials) String() string { return proto.CompactTextString(m) }
func (*PcloudCredentials) ProtoMessage()    {}
func (*PcloudCredentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_a41550a7431a5bcb, []int{9}
}

func (m *PcloudCredentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PcloudCredentials.Unmarshal(m, b)
}
func (m *PcloudCredentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PcloudCredentials.Marshal(b, m, deterministic)
}
func (m *PcloudCredentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PcloudCredentials.Merge(m, src)
}
func (m *PcloudCredentials) XXX_Size() int {
	return xxx_messageInfo_PcloudCredentials.Size(m)
}
func (m *PcloudCredentials) XXX_DiscardUnknown() {
	xxx_messageInfo_PcloudCredentials.DiscardUnknown(m)
}

var xxx_messageInfo_PcloudCredentials proto.InternalMessageInfo

func (m *PcloudCredentials) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *PcloudCredentials) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type StorageCredentials struct {
	Pcloud               *PcloudCredentials `protobuf:"bytes,1,opt,name=pcloud,proto3" json:"pcloud,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *StorageCredentials) Reset()         { *m = StorageCredentials{} }
func (m *StorageCredentials) String() string { return proto.CompactTextString(m) }
func (*StorageCredentials) ProtoMessage()    {}
func (*StorageCredentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_a41550a7431a5bcb, []int{10}
}

func (m *StorageCredentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageCredentials.Unmarshal(m, b)
}
func (m *StorageCredentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageCredentials.Marshal(b, m, deterministic)
}
func (m *StorageCredentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageCredentials.Merge(m, src)
}
func (m *StorageCredentials) XXX_Size() int {
	return xxx_messageInfo_StorageCredentials.Size(m)
}
func (m *StorageCredentials) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageCredentials.DiscardUnknown(m)
}

var xxx_messageInfo_StorageCredentials proto.InternalMessageInfo

func (m *StorageCredentials) GetPcloud() *PcloudCredentials {
	if m != nil {
		return m.Pcloud
	}
	return nil
}

type Keyset struct {
	// Types that are valid to be assigned to Kind:
	//	*Keyset_UnencryptedTinkKeyset
	Kind                 isKeyset_Kind `protobuf_oneof:"kind"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Keyset) Reset()         { *m = Keyset{} }
func (m *Keyset) String() string { return proto.CompactTextString(m) }
func (*Keyset) ProtoMessage()    {}
func (*Keyset) Descriptor() ([]byte, []int) {
	return fileDescriptor_a41550a7431a5bcb, []int{11}
}

func (m *Keyset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Keyset.Unmarshal(m, b)
}
func (m *Keyset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Keyset.Marshal(b, m, deterministic)
}
func (m *Keyset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Keyset.Merge(m, src)
}
func (m *Keyset) XXX_Size() int {
	return xxx_messageInfo_Keyset.Size(m)
}
func (m *Keyset) XXX_DiscardUnknown() {
	xxx_messageInfo_Keyset.DiscardUnknown(m)
}

var xxx_messageInfo_Keyset proto.InternalMessageInfo

type isKeyset_Kind interface {
	isKeyset_Kind()
}

type Keyset_UnencryptedTinkKeyset struct {
	UnencryptedTinkKeyset []byte `protobuf:"bytes,1,opt,name=unencrypted_tink_keyset,json=unencryptedTinkKeyset,proto3,oneof"`
}

func (*Keyset_UnencryptedTinkKeyset) isKeyset_Kind() {}

func (m *Keyset) GetKind() isKeyset_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *Keyset) GetUnencryptedTinkKeyset() []byte {
	if x, ok := m.GetKind().(*Keyset_UnencryptedTinkKeyset); ok {
		return x.UnencryptedTinkKeyset
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Keyset) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Keyset_OneofMarshaler, _Keyset_OneofUnmarshaler, _Keyset_OneofSizer, []interface{}{
		(*Keyset_UnencryptedTinkKeyset)(nil),
	}
}

func _Keyset_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Keyset)
	// kind
	switch x := m.Kind.(type) {
	case *Keyset_UnencryptedTinkKeyset:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.UnencryptedTinkKeyset)
	case nil:
	default:
		return fmt.Errorf("Keyset.Kind has unexpected type %T", x)
	}
	return nil
}

func _Keyset_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Keyset)
	switch tag {
	case 1: // kind.unencrypted_tink_keyset
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Kind = &Keyset_UnencryptedTinkKeyset{x}
		return true, err
	default:
		return false, nil
	}
}

func _Keyset_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Keyset)
	// kind
	switch x := m.Kind.(type) {
	case *Keyset_UnencryptedTinkKeyset:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.UnencryptedTinkKeyset)))
		n += len(x.UnencryptedTinkKeyset)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type QmfsConfig struct {
	QmfsRoot             string   `protobuf:"bytes,1,opt,name=qmfs_root,json=qmfsRoot,proto3" json:"qmfs_root,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QmfsConfig) Reset()         { *m = QmfsConfig{} }
func (m *QmfsConfig) String() string { return proto.CompactTextString(m) }
func (*QmfsConfig) ProtoMessage()    {}
func (*QmfsConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_a41550a7431a5bcb, []int{12}
}

func (m *QmfsConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QmfsConfig.Unmarshal(m, b)
}
func (m *QmfsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QmfsConfig.Marshal(b, m, deterministic)
}
func (m *QmfsConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QmfsConfig.Merge(m, src)
}
func (m *QmfsConfig) XXX_Size() int {
	return xxx_messageInfo_QmfsConfig.Size(m)
}
func (m *QmfsConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_QmfsConfig.DiscardUnknown(m)
}

var xxx_messageInfo_QmfsConfig proto.InternalMessageInfo

func (m *QmfsConfig) GetQmfsRoot() string {
	if m != nil {
		return m.QmfsRoot
	}
	return ""
}

type DeduConfig struct {
	EmptyBlobHashSanityCheck string      `protobuf:"bytes,1,opt,name=empty_blob_hash_sanity_check,json=emptyBlobHashSanityCheck,proto3" json:"empty_blob_hash_sanity_check,omitempty"`
	PcloudTargetFolder       string      `protobuf:"bytes,2,opt,name=pcloud_target_folder,json=pcloudTargetFolder,proto3" json:"pcloud_target_folder,omitempty"`
	ChunkSize                int64       `protobuf:"varint,3,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
	Qmfs                     *QmfsConfig `protobuf:"bytes,4,opt,name=qmfs,proto3" json:"qmfs,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}    `json:"-"`
	XXX_unrecognized         []byte      `json:"-"`
	XXX_sizecache            int32       `json:"-"`
}

func (m *DeduConfig) Reset()         { *m = DeduConfig{} }
func (m *DeduConfig) String() string { return proto.CompactTextString(m) }
func (*DeduConfig) ProtoMessage()    {}
func (*DeduConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_a41550a7431a5bcb, []int{13}
}

func (m *DeduConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeduConfig.Unmarshal(m, b)
}
func (m *DeduConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeduConfig.Marshal(b, m, deterministic)
}
func (m *DeduConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeduConfig.Merge(m, src)
}
func (m *DeduConfig) XXX_Size() int {
	return xxx_messageInfo_DeduConfig.Size(m)
}
func (m *DeduConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DeduConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DeduConfig proto.InternalMessageInfo

func (m *DeduConfig) GetEmptyBlobHashSanityCheck() string {
	if m != nil {
		return m.EmptyBlobHashSanityCheck
	}
	return ""
}

func (m *DeduConfig) GetPcloudTargetFolder() string {
	if m != nil {
		return m.PcloudTargetFolder
	}
	return ""
}

func (m *DeduConfig) GetChunkSize() int64 {
	if m != nil {
		return m.ChunkSize
	}
	return 0
}

func (m *DeduConfig) GetQmfs() *QmfsConfig {
	if m != nil {
		return m.Qmfs
	}
	return nil
}

type DeduSecretsConfig struct {
	HashingKey           []byte              `protobuf:"bytes,1,opt,name=hashing_key,json=hashingKey,proto3" json:"hashing_key,omitempty"`
	EncryptionKeys       *Keyset             `protobuf:"bytes,2,opt,name=encryption_keys,json=encryptionKeys,proto3" json:"encryption_keys,omitempty"`
	StorageCreds         *StorageCredentials `protobuf:"bytes,3,opt,name=storage_creds,json=storageCreds,proto3" json:"storage_creds,omitempty"`
	Config               *DeduConfig         `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *DeduSecretsConfig) Reset()         { *m = DeduSecretsConfig{} }
func (m *DeduSecretsConfig) String() string { return proto.CompactTextString(m) }
func (*DeduSecretsConfig) ProtoMessage()    {}
func (*DeduSecretsConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_a41550a7431a5bcb, []int{14}
}

func (m *DeduSecretsConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeduSecretsConfig.Unmarshal(m, b)
}
func (m *DeduSecretsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeduSecretsConfig.Marshal(b, m, deterministic)
}
func (m *DeduSecretsConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeduSecretsConfig.Merge(m, src)
}
func (m *DeduSecretsConfig) XXX_Size() int {
	return xxx_messageInfo_DeduSecretsConfig.Size(m)
}
func (m *DeduSecretsConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DeduSecretsConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DeduSecretsConfig proto.InternalMessageInfo

func (m *DeduSecretsConfig) GetHashingKey() []byte {
	if m != nil {
		return m.HashingKey
	}
	return nil
}

func (m *DeduSecretsConfig) GetEncryptionKeys() *Keyset {
	if m != nil {
		return m.EncryptionKeys
	}
	return nil
}

func (m *DeduSecretsConfig) GetStorageCreds() *StorageCredentials {
	if m != nil {
		return m.StorageCreds
	}
	return nil
}

func (m *DeduSecretsConfig) GetConfig() *DeduConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func init() {
	proto.RegisterType((*ChunkMetadata)(nil), "dedupb.ChunkMetadata")
	proto.RegisterType((*MagicHeader)(nil), "dedupb.MagicHeader")
	proto.RegisterType((*PublicHeader)(nil), "dedupb.PublicHeader")
	proto.RegisterType((*Hashes)(nil), "dedupb.Hashes")
	proto.RegisterType((*PrivateHeader)(nil), "dedupb.PrivateHeader")
	proto.RegisterType((*Header)(nil), "dedupb.Header")
	proto.RegisterType((*ChunkReference)(nil), "dedupb.ChunkReference")
	proto.RegisterType((*VirtualChunk)(nil), "dedupb.VirtualChunk")
	proto.RegisterType((*LocalResourceChunk)(nil), "dedupb.LocalResourceChunk")
	proto.RegisterType((*PcloudCredentials)(nil), "dedupb.PcloudCredentials")
	proto.RegisterType((*StorageCredentials)(nil), "dedupb.StorageCredentials")
	proto.RegisterType((*Keyset)(nil), "dedupb.Keyset")
	proto.RegisterType((*QmfsConfig)(nil), "dedupb.QmfsConfig")
	proto.RegisterType((*DeduConfig)(nil), "dedupb.DeduConfig")
	proto.RegisterType((*DeduSecretsConfig)(nil), "dedupb.DeduSecretsConfig")
}

func init() { proto.RegisterFile("dedu.proto", fileDescriptor_a41550a7431a5bcb) }

var fileDescriptor_a41550a7431a5bcb = []byte{
	// 961 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0xff, 0x6e, 0xdc, 0xc4,
	0x13, 0xff, 0x5e, 0x2e, 0x71, 0x9b, 0xb9, 0xcb, 0xaf, 0x6d, 0xd3, 0x6f, 0x1a, 0xa8, 0x28, 0x46,
	0x42, 0x4d, 0x15, 0x02, 0x0d, 0x42, 0x50, 0x09, 0x81, 0xc8, 0x41, 0x09, 0xa4, 0x85, 0xb0, 0x89,
	0xfa, 0x1f, 0x5a, 0xed, 0xd9, 0xe3, 0xbb, 0xd5, 0xf9, 0xbc, 0xc6, 0xbb, 0x0e, 0x5c, 0xff, 0xe0,
	0x21, 0x78, 0x17, 0xc4, 0x13, 0xf0, 0x12, 0xbc, 0x05, 0x6f, 0x80, 0x76, 0x76, 0xed, 0xf8, 0x02,
	0x42, 0xfc, 0xe7, 0x99, 0xf9, 0xec, 0xec, 0xcc, 0x67, 0x3e, 0x3b, 0x06, 0x48, 0x31, 0xad, 0x8f,
	0xca, 0x4a, 0x5b, 0xcd, 0x22, 0xf7, 0x5d, 0x8e, 0x63, 0x05, 0x1b, 0xa3, 0x69, 0x5d, 0xcc, 0x5e,
	0xa0, 0x95, 0xa9, 0xb4, 0x92, 0x1d, 0xc0, 0x76, 0x5d, 0xe6, 0x5a, 0xa6, 0xc2, 0xaa, 0x39, 0x1a,
	0x2b, 0xe7, 0xe5, 0x5e, 0xef, 0x61, 0xef, 0xd1, 0x3a, 0xdf, 0xf2, 0xfe, 0xcb, 0xc6, 0xcd, 0xde,
	0x01, 0x66, 0xea, 0xc9, 0x04, 0x8d, 0xc5, 0x54, 0x64, 0x2a, 0xc7, 0x42, 0xce, 0x71, 0x6f, 0x85,
	0xc0, 0x3b, 0x6d, 0xe4, 0x59, 0x08, 0xc4, 0x3f, 0xc3, 0xe0, 0x85, 0x9c, 0xa8, 0xe4, 0x14, 0x65,
	0x8a, 0x15, 0x63, 0xb0, 0xea, 0x6a, 0x08, 0xc9, 0xe9, 0xdb, 0x5d, 0x4e, 0xe5, 0x25, 0x3a, 0x17,
	0x57, 0x58, 0x19, 0xa5, 0x0b, 0xca, 0xb7, 0xc6, 0xb7, 0x1a, 0xff, 0x4b, 0xef, 0x66, 0xef, 0xc1,
	0xdd, 0xb2, 0x1e, 0xe7, 0x2a, 0x11, 0x53, 0xca, 0x27, 0x72, 0x2c, 0x26, 0x76, 0xba, 0xd7, 0x27,
	0x38, 0xf3, 0x31, 0x7f, 0xd5, 0x73, 0x8a, 0xc4, 0xdf, 0xc3, 0xf0, 0xbc, 0xe3, 0x65, 0xf7, 0xe1,
	0x76, 0xe2, 0x5a, 0x17, 0x2a, 0x0d, 0x45, 0xdc, 0x22, 0xfb, 0xab, 0x94, 0x1d, 0xc3, 0x6e, 0x59,
	0xa9, 0x2b, 0x69, 0xf1, 0x46, 0x76, 0x5f, 0xcc, 0x9d, 0x10, 0x5c, 0x4a, 0x7f, 0x04, 0xd1, 0xa9,
	0x34, 0x53, 0x34, 0xae, 0x33, 0x33, 0x95, 0x4f, 0x28, 0xe9, 0x90, 0xd3, 0x37, 0xdb, 0x86, 0xfe,
	0x3c, 0xfd, 0x80, 0xce, 0x0f, 0xb9, 0xfb, 0x8c, 0x7f, 0x5b, 0x81, 0x8d, 0xf3, 0x6e, 0x1e, 0xf6,
	0x14, 0x36, 0xae, 0x54, 0x65, 0x6b, 0x99, 0x0b, 0x2a, 0x84, 0x12, 0x0c, 0x8e, 0xef, 0x1e, 0xf9,
	0x59, 0x1d, 0xbd, 0xf4, 0x41, 0x9a, 0x17, 0x1f, 0x5e, 0x75, 0x2c, 0xf6, 0x19, 0x3c, 0xf0, 0xbd,
	0x98, 0x12, 0x13, 0x95, 0xa9, 0x44, 0x60, 0x91, 0x54, 0x8b, 0xd2, 0x2a, 0x5d, 0x88, 0x19, 0x2e,
	0xc2, 0xc5, 0xfb, 0x04, 0xba, 0x08, 0x98, 0x2f, 0x5a, 0xc8, 0x19, 0x2e, 0xd8, 0x09, 0xec, 0x68,
	0x32, 0x64, 0x2e, 0xe6, 0x41, 0x0d, 0xc4, 0xe6, 0xe0, 0x78, 0xb7, 0xa9, 0x60, 0x49, 0x2a, 0x7c,
	0xbb, 0xc1, 0xb7, 0xe2, 0x79, 0x0a, 0xdb, 0x65, 0x2e, 0x55, 0x61, 0xf1, 0x27, 0x2b, 0xa6, 0xc4,
	0xc6, 0xde, 0x2a, 0xa5, 0xd8, 0x6c, 0x52, 0x78, 0x8e, 0xf8, 0x56, 0x8b, 0x0b, 0xa4, 0x1d, 0x74,
	0x8f, 0x06, 0xb6, 0xd7, 0xc2, 0xe8, 0x1b, 0x7f, 0x60, 0xfa, 0x97, 0x1e, 0x44, 0x81, 0xb2, 0x03,
	0x58, 0x9b, 0x3b, 0x4d, 0x05, 0xaa, 0xee, 0x34, 0xb7, 0x74, 0x84, 0xc6, 0x3d, 0x82, 0x1d, 0x42,
	0xe4, 0x45, 0x41, 0x5c, 0x74, 0x68, 0xed, 0x8a, 0x82, 0x07, 0x0c, 0x7b, 0x17, 0x6e, 0x85, 0x21,
	0xdf, 0xe4, 0x60, 0x69, 0x66, 0xbc, 0x41, 0xc5, 0x1f, 0xc3, 0xa6, 0x1f, 0x0c, 0x66, 0x58, 0x61,
	0x91, 0xa0, 0x93, 0x81, 0xa3, 0xa0, 0x11, 0xb8, 0xfb, 0x66, 0xf7, 0x20, 0xea, 0x28, 0xa9, 0xcf,
	0x83, 0x15, 0xff, 0xda, 0x83, 0x61, 0x77, 0xbc, 0xec, 0x4d, 0x18, 0x5a, 0x6d, 0x65, 0xde, 0x50,
	0xd1, 0x23, 0xf8, 0x80, 0x7c, 0x9e, 0x06, 0x76, 0x08, 0x6b, 0x5e, 0x26, 0x2b, 0x0f, 0xfb, 0x8f,
	0x06, 0xc7, 0xf7, 0x96, 0x86, 0xd4, 0x96, 0xc1, 0x3d, 0xe8, 0x1f, 0x47, 0xd3, 0xff, 0x6f, 0xa3,
	0xe9, 0x3e, 0x94, 0xd5, 0xa5, 0x87, 0x12, 0xff, 0xd9, 0x03, 0xf6, 0x5c, 0x27, 0x32, 0xe7, 0x68,
	0x74, 0x5d, 0x25, 0xe8, 0xab, 0x7f, 0x0b, 0x36, 0xaa, 0xe0, 0x10, 0xb4, 0x14, 0x3c, 0x07, 0xc3,
	0xc6, 0xf9, 0x8d, 0x9c, 0xa3, 0xe3, 0x42, 0x67, 0x99, 0x41, 0xdb, 0x70, 0xe1, 0xad, 0x0e, 0x47,
	0xfd, 0x2e, 0x47, 0xec, 0x31, 0xec, 0xb8, 0xba, 0x85, 0xce, 0x44, 0x5b, 0x61, 0xa8, 0x67, 0xcb,
	0x05, 0xbe, 0xcd, 0xce, 0x1b, 0x37, 0x3b, 0x04, 0xd6, 0x60, 0x49, 0xe3, 0x9a, 0xc0, 0x6b, 0x04,
	0xde, 0xf6, 0xe0, 0x51, 0xeb, 0xbf, 0x66, 0x32, 0x22, 0x42, 0xfe, 0x9d, 0xc9, 0xf8, 0x0c, 0x76,
	0xce, 0x93, 0x5c, 0xd7, 0xe9, 0xa8, 0xc2, 0x14, 0x0b, 0xab, 0x64, 0x6e, 0xd8, 0x3e, 0xdc, 0xae,
	0x0d, 0x56, 0x9d, 0x66, 0x5b, 0xdb, 0xc5, 0x4a, 0x69, 0xcc, 0x8f, 0xba, 0x4a, 0xc3, 0x76, 0x6c,
	0xed, 0xf8, 0x4b, 0x60, 0x17, 0x56, 0x57, 0x72, 0x82, 0xdd, 0x6c, 0x4f, 0x20, 0x2a, 0xe9, 0x8a,
	0xa0, 0xeb, 0xfb, 0xad, 0xf8, 0x6e, 0x5e, 0xcc, 0x03, 0x30, 0xfe, 0x1a, 0xa2, 0x33, 0x5c, 0x38,
	0xfe, 0x3e, 0x82, 0xff, 0xd7, 0x45, 0x78, 0xfe, 0xe8, 0xd6, 0x78, 0x31, 0x73, 0x2b, 0xc0, 0x11,
	0x4d, 0x1b, 0xe9, 0xf4, 0x7f, 0x7c, 0xb7, 0x03, 0xb8, 0x54, 0xc5, 0xcc, 0x9f, 0x3c, 0x89, 0x60,
	0x75, 0xa6, 0x8a, 0x34, 0x3e, 0x00, 0xf8, 0x6e, 0x9e, 0x99, 0x91, 0x2e, 0x32, 0x35, 0x61, 0xaf,
	0xc1, 0xfa, 0x0f, 0xf3, 0xcc, 0x88, 0x4a, 0x6b, 0xdb, 0xf4, 0xe6, 0x1c, 0x5c, 0x6b, 0x1b, 0xff,
	0xde, 0x03, 0xf8, 0x1c, 0xd3, 0x3a, 0x60, 0x3f, 0x81, 0xd7, 0x71, 0x5e, 0xda, 0x85, 0x18, 0xe7,
	0x7a, 0x4c, 0x32, 0x13, 0x46, 0x16, 0xca, 0x2e, 0x44, 0x32, 0xc5, 0x64, 0x16, 0x8e, 0xef, 0x11,
	0xe6, 0x24, 0xd7, 0x63, 0xa7, 0xb0, 0x0b, 0x02, 0x8c, 0x5c, 0x9c, 0xb6, 0x3a, 0xf5, 0x23, 0xac,
	0xac, 0x26, 0x68, 0x45, 0xa6, 0xf3, 0x14, 0xab, 0x40, 0x1b, 0xf3, 0xb1, 0x4b, 0x0a, 0x3d, 0xa3,
	0x08, 0x7b, 0x00, 0x10, 0x36, 0x9f, 0x7a, 0x85, 0x41, 0x31, 0xeb, 0x7e, 0xcd, 0xa9, 0x57, 0xc8,
	0xde, 0x86, 0x55, 0x57, 0x6b, 0xd8, 0x42, 0xac, 0xe1, 0xf1, 0xba, 0x3d, 0x4e, 0xf1, 0xf8, 0x8f,
	0x1e, 0xec, 0xb8, 0x3e, 0x2e, 0x30, 0xa9, 0xd0, 0x36, 0xad, 0xbf, 0x01, 0x03, 0xd7, 0x83, 0x2a,
	0x26, 0xb4, 0x44, 0xfd, 0x42, 0x87, 0xe0, 0x72, 0x4b, 0xf3, 0x43, 0xd8, 0x5a, 0x5e, 0xb4, 0x26,
	0x6c, 0x97, 0xf6, 0x51, 0x79, 0x6a, 0xf9, 0x26, 0x76, 0x97, 0xad, 0x61, 0x9f, 0xc2, 0x86, 0xf1,
	0x73, 0x17, 0x49, 0x85, 0x69, 0xf3, 0x16, 0xf7, 0x9b, 0x63, 0x7f, 0x17, 0x05, 0x1f, 0x9a, 0x6b,
	0x9f, 0x61, 0x8f, 0x21, 0x4a, 0xa8, 0xc8, 0x9b, 0xad, 0x5d, 0x4f, 0x83, 0x07, 0xc4, 0x38, 0xa2,
	0x9f, 0xe7, 0xfb, 0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0x12, 0x1f, 0xbc, 0x60, 0x01, 0x08, 0x00,
	0x00,
}
